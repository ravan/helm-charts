clusterName: ''
apiKey: ''
otlpHost: ''

opentelemetry-collector:
  image:
    repository: 'otel/opentelemetry-collector-k8s'
  extraEnvsFrom:
    - secretRef:
        name: open-telemetry-collector
  mode: deployment
  ports:
    metrics:
      enabled: true
  presets:
    kubernetesAttributes:
      enabled: true
      extractAllPodLabels: true
  config:
    extensions:
      bearertokenauth:
        scheme: SUSEObservability
        token: '${env:API_KEY}'
    exporters:
      otlp/stackstate:
        auth:
          authenticator: bearertokenauth
        endpoint: '${env:OTLP_HOST}:443'
    processors:
      tail_sampling:
        decision_wait: 10s
        policies:
          - name: rate-limited-composite
            type: composite
            composite:
              max_total_spans_per_second: 500
              policy_order: [errors, slow-traces, rest]
              composite_sub_policy:
                - name: errors
                  type: status_code
                  status_code:
                    status_codes: [ERROR]
                - name: slow-traces
                  type: latency
                  latency:
                    threshold_ms: 1000
                - name: rest
                  type: always_sample
              rate_allocation:
                - policy: errors
                  percent: 33
                - policy: slow-traces
                  percent: 33
                - policy: rest
                  percent: 34
      resource:
        attributes:
          - key: k8s.cluster.name
            action: upsert
            value: '${env:CLUSTER_NAME}'
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: insert
          - key: service.namespace
            from_attribute: k8s.namespace.name
            action: insert
      filter/dropMissingK8sAttributes:
        error_mode: ignore
        traces:
          span:
            - resource.attributes["k8s.node.name"] == nil
            - resource.attributes["k8s.pod.uid"] == nil
            - resource.attributes["k8s.namespace.name"] == nil
            - resource.attributes["k8s.pod.name"] == nil
    connectors:
      spanmetrics:
        metrics_expiration: 5m
        namespace: otel_span
      routing/traces:
        error_mode: ignore
        match_once: false
        table:
          - statement: route()
            pipelines: [traces/sampling, traces/spanmetrics]
    service:
      extensions:
        - health_check
        - bearertokenauth
      pipelines:
        traces:
          receivers: [otlp]
          processors: [filter/dropMissingK8sAttributes, memory_limiter, resource]
          exporters: [routing/traces]
        traces/spanmetrics:
          receivers: [routing/traces]
          processors: []
          exporters: [spanmetrics]
        traces/sampling:
          receivers: [routing/traces]
          processors: [tail_sampling, batch]
          exporters: [otlp/stackstate]
        metrics:
          receivers: [otlp, spanmetrics, prometheus]
          processors: [memory_limiter, resource, batch]
          exporters: [otlp/stackstate]
